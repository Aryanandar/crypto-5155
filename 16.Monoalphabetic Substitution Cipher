#include <stdio.h>
#include <string.h>
#define ALPHABET_SIZE 26
void frequencyAnalysis(char* text, int* frequencies) {
    for (int i = 0; i < ALPHABET_SIZE; i++) {
        frequencies[i] = 0;
    }
    for (int i = 0; text[i] != '\0'; i++) {
        if (text[i] >= 'a' && text[i] <= 'z') {
            frequencies[text[i] - 'a']++;
        }
    }
}
void sortFrequencies(int* frequencies, int* sortedIndices) {
    for (int i = 0; i < ALPHABET_SIZE; i++) {
        sortedIndices[i] = i;
    }
    for (int i = 0; i < ALPHABET_SIZE - 1; i++) {
        for (int j = 0; j < ALPHABET_SIZE - i - 1; j++) {
            if (frequencies[sortedIndices[j]] < frequencies[sortedIndices[j + 1]]) {
                int temp = sortedIndices[j];
                sortedIndices[j] = sortedIndices[j + 1];
                sortedIndices[j + 1] = temp;
            }
        }
    }
}
void decrypt(char* ciphertext, char* key, char* plaintext) {
    for (int i = 0; ciphertext[i] != '\0'; i++) {
        if (ciphertext[i] == ' ') {
            plaintext[i] = ' ';
            continue;
        }
        plaintext[i] = key[ciphertext[i] - 'a'];
    }
    plaintext[strlen(ciphertext)] = '\0';
}
int main() {
    char ciphertext[] = "wklv lv d whvw phvvdjh";
    int frequencies[ALPHABET_SIZE];
    frequencyAnalysis(ciphertext, frequencies);
    int sortedIndices[ALPHABET_SIZE];
    sortFrequencies(frequencies, sortedIndices);
    char englishFrequencies[] = "etaoinshrdlcumwfgypbvkjxqz";
    char key[ALPHABET_SIZE];
    for (int i = 0; i < ALPHABET_SIZE; i++) {
        key[sortedIndices[i]] = englishFrequencies[i];
    }
    char plaintext[strlen(ciphertext)];
    decrypt(ciphertext, key, plaintext);
    printf("Decrypted text: %s\n", plaintext);
    return 0;
}
