#include <stdio.h>
#include <stdint.h>
uint64_t DES(uint64_t data, uint64_t key) {
    return data ^ key;
}
void DES_ECB_encrypt(uint8_t* plaintext, uint8_t* ciphertext, uint64_t key, size_t length) {
    for (size_t i = 0; i < length; i += 8) {
        uint64_t block = *(uint64_t*)(plaintext + i);
        block = DES(block, key);
        *(uint64_t*)(ciphertext + i) = block;
    }
}
void DES_CBC_encrypt(uint8_t* plaintext, uint8_t* ciphertext, uint64_t key, uint8_t* iv, size_t length) {
    uint8_t block[8];
    memcpy(block, iv, 8);
    for (size_t i = 0; i < length; i += 8) {
        for (size_t j = 0; j < 8; j++) {
            block[j] ^= plaintext[i + j];
        }
        uint64_t block64 = *(uint64_t*)block;
        block64 = DES(block64, key);
        *(uint64_t*)block = block64;
        memcpy(ciphertext + i, block, 8);
    }
}
int main() {
    uint8_t plaintext[16] = "Hello, World!!!";
    uint8_t ciphertext[16];
    uint64_t key = 0x133457799bbcdff1;
    uint8_t iv[8] = { 0 };
    DES_ECB_encrypt(plaintext, ciphertext, key, 16);
    printf("ECB Ciphertext: ");
    for (int i = 0; i < 16; i++) {
        printf("%02x", ciphertext[i]);
    }
    printf("\n");
    DES_CBC_encrypt(plaintext, ciphertext, key, iv, 16);
    printf("CBC Ciphertext: ");
    for (int i = 0; i < 16; i++) {
        printf("%02x", ciphertext[i]);
    }
    printf("\n");
    return 0;
}
